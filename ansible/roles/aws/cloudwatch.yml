---
# This playbook deploys the whole application stack in this site.



# - cloudwatchevent_rule:
#     name: MyCronTask
#     schedule_expression: "cron(0 20 * * ? *)"
#     description: Run my scheduled task
#     targets:
#       - id: MyTargetId
#         arn: arn:aws:lambda:us-east-1:123456789012:function:MyFunction

# - cloudwatchevent_rule:
#     name: MyDisabledCronTask
#     schedule_expression: "rate(5 minutes)"
#     description: Run my disabled scheduled task
#     state: disabled
#     targets:
#       - id: MyOtherTargetId
#         arn: arn:aws:lambda:us-east-1:123456789012:function:MyFunction
#         input: '{"foo": "bar"}'

# - cloudwatchevent_rule:
#     name: MyCronTask
#     state: absent


# Create a cloudwatch rule, add a policy from a file, enable requester pays, enable versioning and tag
#  "cron(5 minutes)"

- name: ensure(0)[EventBridgeEvent] (w/ targets)
  cloudwatchevent_rule:
    aws_access_key: "{{ access }}"
    aws_secret_key: "{{ secret }}"
    security_token: "{{ token }}"
    region: "{{project.region | default(null)}}"
    name: "{{ item.name }}"
    schedule_expression: "{{ item.schedule_expression }}"
    description: "{{ item.description }}"
    state: "{{ item.state }}"
    targets: "{{ item.targets }}"
  with_items: "{{ project.bridge_rules }}"
  register: bridge_rules
